@page "/tags"
@attribute [Authorize(Roles = "Administrator,Instructor,Student")]

<PageTitle>Courses</PageTitle>

@using Newtonsoft.Json
@using codesome.Data
@using codesome.Data.Courses
@using codesome.Data.Models
@using codesome.Data.Services;
@using codesome.Data.Services.Courses
@using codesome.Data.Services.Enrollments
@inject ITagsService _tagsService
@inject ICategoriesService _categoriesService
@inject IStudentEnrollmentService _studentEnrollmentService
@inject IDialogService DialogService
@inject ILocalStorageService _LocalStorage

<PageTitle>Categories</PageTitle>

@if (tags == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Primary">
        Add Tag
    </MudButton>
    <MudTable Items="@tags">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Course Tags</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Name</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.Name</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }"
                           RowsPerPageString="@rowsPerPageString"
                           InfoFormat="@infoFormat"
                           AllItemsText="@allItemsText"
                           HorizontalAlignment="@horizontalAlignment"
                           HideRowsPerPage="@hideRowsPerPage"
                           HidePageNumber="@hidePageNumber"
                           HidePagination="@hidePagination" />
        </PagerContent>
    </MudTable>
}

@code {
    private List<Tag> tags = new List<Tag>();
    private HorizontalAlignment horizontalAlignment = HorizontalAlignment.Right;
    private bool hidePageNumber;
    private bool hidePagination;
    private bool hideRowsPerPage;
    private string rowsPerPageString = "Rows per page:";
    private string infoFormat = "{first_item}-{last_item} of {all_items}";
    private string allItemsText = "All";
    private string userID = null!;

    protected override async Task OnInitializedAsync()
    {
        var uID = await _LocalStorage.GetItemAsync<string>("__id");
        userID = uID!;
        var res = await _tagsService.GetTagsAsync();
        if (res != null)
        {
            res.Reverse();
            tags = res;
        }
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Large };
        DialogService.Show<AddTag>("Add Tag", options);
    }
}
